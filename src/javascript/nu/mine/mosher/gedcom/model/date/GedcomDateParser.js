define([],function(){
  /* Generated by PEG.js 0.6.2 (http://pegjs.majda.cz/). */
  
  var result = {
    /*
     * Parses the input with a generated parser. If the parsing is successfull,
     * returns a value explicitly or implicitly specified by the grammar from
     * which the parser was generated (see |PEG.buildParser|). If the parsing is
     * unsuccessful, throws |PEG.parser.SyntaxError| describing the error.
     */
    parse: function(input, startRule) {
      var parseFunctions = {
        "N": parse_N,
        "OS": parse_OS,
        "S": parse_S,
        "date": parse_date,
        "date_approx": parse_date_approx,
        "date_french": parse_date_french,
        "date_gregor": parse_date_gregor,
        "date_gregor_raw": parse_date_gregor_raw,
        "date_hebrew": parse_date_hebrew,
        "date_int": parse_date_int,
        "date_julian": parse_date_julian,
        "date_julian_raw": parse_date_julian_raw,
        "date_period": parse_date_period,
        "date_phrase": parse_date_phrase,
        "date_range": parse_date_range,
        "date_slash": parse_date_slash,
        "epoch": parse_epoch,
        "known_cal": parse_known_cal,
        "month_engl": parse_month_engl,
        "month_fren": parse_month_fren,
        "month_hebr": parse_month_hebr,
        "other_cal": parse_other_cal,
        "start": parse_start,
        "year": parse_year,
        "year_julian": parse_year_julian,
        "year_slash": parse_year_slash
      };
      
      if (startRule !== undefined) {
        if (parseFunctions[startRule] === undefined) {
          throw new Error("Invalid rule name: " + quote(startRule) + ".");
        }
      } else {
        startRule = "start";
      }
      
      var pos = 0;
      var reportMatchFailures = true;
      var rightmostMatchFailuresPos = 0;
      var rightmostMatchFailuresExpected = [];
      var cache = {};
      
      function padLeft(input, padding, length) {
        var result = input;
        
        var padLength = length - input.length;
        for (var i = 0; i < padLength; i++) {
          result = padding + result;
        }
        
        return result;
      }
      
      function escape(ch) {
        var charCode = ch.charCodeAt(0);
        
        if (charCode <= 0xFF) {
          var escapeChar = 'x';
          var length = 2;
        } else {
          var escapeChar = 'u';
          var length = 4;
        }
        
        return '\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);
      }
      
      function quote(s) {
        /*
         * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a
         * string literal except for the closing quote character, backslash,
         * carriage return, line separator, paragraph separator, and line feed.
         * Any character may appear in the form of an escape sequence.
         */
        return '"' + s
          .replace(/\\/g, '\\\\')            // backslash
          .replace(/"/g, '\\"')              // closing quote character
          .replace(/\r/g, '\\r')             // carriage return
          .replace(/\n/g, '\\n')             // line feed
          .replace(/[\x80-\uFFFF]/g, escape) // non-ASCII characters
          + '"';
      }
      
      function matchFailed(failure) {
        if (pos < rightmostMatchFailuresPos) {
          return;
        }
        
        if (pos > rightmostMatchFailuresPos) {
          rightmostMatchFailuresPos = pos;
          rightmostMatchFailuresExpected = [];
        }
        
        rightmostMatchFailuresExpected.push(failure);
      }
      
      function parse_start() {
        var cacheKey = 'start@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var result6 = parse_date_int();
        if (result6 !== null) {
          var result0 = result6;
        } else {
          var result5 = parse_date_phrase();
          if (result5 !== null) {
            var result0 = result5;
          } else {
            var result4 = parse_date_period();
            if (result4 !== null) {
              var result0 = result4;
            } else {
              var result3 = parse_date_range();
              if (result3 !== null) {
                var result0 = result3;
              } else {
                var result2 = parse_date_approx();
                if (result2 !== null) {
                  var result0 = result2;
                } else {
                  var result1 = parse_date();
                  if (result1 !== null) {
                    var result0 = result1;
                  } else {
                    var result0 = null;;
                  };
                };
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_date_int() {
        var cacheKey = 'date_int@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 3) === "INT") {
          var result3 = "INT";
          pos += 3;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"INT\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_S();
          if (result4 !== null) {
            var result5 = parse_date();
            if (result5 !== null) {
              var result6 = parse_S();
              if (result6 !== null) {
                var result7 = parse_date_phrase();
                if (result7 !== null) {
                  var result1 = [result3, result4, result5, result6, result7];
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(ymd) { return ymd; })(result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_date_phrase() {
        var cacheKey = 'date_phrase@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "(") {
          var result3 = "(";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"(\"");
          }
        }
        if (result3 !== null) {
          var result4 = [];
          if (input.substr(pos).match(/^[^)]/) !== null) {
            var result6 = input.charAt(pos);
            pos++;
          } else {
            var result6 = null;
            if (reportMatchFailures) {
              matchFailed("[^)]");
            }
          }
          while (result6 !== null) {
            result4.push(result6);
            if (input.substr(pos).match(/^[^)]/) !== null) {
              var result6 = input.charAt(pos);
              pos++;
            } else {
              var result6 = null;
              if (reportMatchFailures) {
                matchFailed("[^)]");
              }
            }
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === ")") {
              var result5 = ")";
              pos += 1;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\")\"");
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(str) { return str.join(""); })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_date_period() {
        var cacheKey = 'date_period@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos4 = pos;
        var savedPos5 = pos;
        if (input.substr(pos, 4) === "FROM") {
          var result16 = "FROM";
          pos += 4;
        } else {
          var result16 = null;
          if (reportMatchFailures) {
            matchFailed("\"FROM\"");
          }
        }
        if (result16 !== null) {
          var result17 = parse_S();
          if (result17 !== null) {
            var result18 = parse_date();
            if (result18 !== null) {
              var result19 = parse_S();
              if (result19 !== null) {
                if (input.substr(pos, 2) === "TO") {
                  var result20 = "TO";
                  pos += 2;
                } else {
                  var result20 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"TO\"");
                  }
                }
                if (result20 !== null) {
                  var result21 = parse_S();
                  if (result21 !== null) {
                    var result22 = parse_date();
                    if (result22 !== null) {
                      var result14 = [result16, result17, result18, result19, result20, result21, result22];
                    } else {
                      var result14 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result14 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result14 = null;
                  pos = savedPos5;
                }
              } else {
                var result14 = null;
                pos = savedPos5;
              }
            } else {
              var result14 = null;
              pos = savedPos5;
            }
          } else {
            var result14 = null;
            pos = savedPos5;
          }
        } else {
          var result14 = null;
          pos = savedPos5;
        }
        var result15 = result14 !== null
          ? (function(f, t) { return { from:f, to:t }; })(result14[2], result14[6])
          : null;
        if (result15 !== null) {
          var result13 = result15;
        } else {
          var result13 = null;
          pos = savedPos4;
        }
        if (result13 !== null) {
          var result0 = result13;
        } else {
          var savedPos2 = pos;
          var savedPos3 = pos;
          if (input.substr(pos, 4) === "FROM") {
            var result10 = "FROM";
            pos += 4;
          } else {
            var result10 = null;
            if (reportMatchFailures) {
              matchFailed("\"FROM\"");
            }
          }
          if (result10 !== null) {
            var result11 = parse_S();
            if (result11 !== null) {
              var result12 = parse_date();
              if (result12 !== null) {
                var result8 = [result10, result11, result12];
              } else {
                var result8 = null;
                pos = savedPos3;
              }
            } else {
              var result8 = null;
              pos = savedPos3;
            }
          } else {
            var result8 = null;
            pos = savedPos3;
          }
          var result9 = result8 !== null
            ? (function(f) { return { from:f       }; })(result8[2])
            : null;
          if (result9 !== null) {
            var result7 = result9;
          } else {
            var result7 = null;
            pos = savedPos2;
          }
          if (result7 !== null) {
            var result0 = result7;
          } else {
            var savedPos0 = pos;
            var savedPos1 = pos;
            if (input.substr(pos, 2) === "TO") {
              var result4 = "TO";
              pos += 2;
            } else {
              var result4 = null;
              if (reportMatchFailures) {
                matchFailed("\"TO\"");
              }
            }
            if (result4 !== null) {
              var result5 = parse_S();
              if (result5 !== null) {
                var result6 = parse_date();
                if (result6 !== null) {
                  var result2 = [result4, result5, result6];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
            var result3 = result2 !== null
              ? (function(t) { return {         to:t }; })(result2[2])
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_date_range() {
        var cacheKey = 'date_range@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos4 = pos;
        var savedPos5 = pos;
        if (input.substr(pos, 3) === "BET") {
          var result16 = "BET";
          pos += 3;
        } else {
          var result16 = null;
          if (reportMatchFailures) {
            matchFailed("\"BET\"");
          }
        }
        if (result16 !== null) {
          var result17 = parse_S();
          if (result17 !== null) {
            var result18 = parse_date();
            if (result18 !== null) {
              var result19 = parse_S();
              if (result19 !== null) {
                if (input.substr(pos, 3) === "AND") {
                  var result20 = "AND";
                  pos += 3;
                } else {
                  var result20 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"AND\"");
                  }
                }
                if (result20 !== null) {
                  var result21 = parse_S();
                  if (result21 !== null) {
                    var result22 = parse_date();
                    if (result22 !== null) {
                      var result14 = [result16, result17, result18, result19, result20, result21, result22];
                    } else {
                      var result14 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result14 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result14 = null;
                  pos = savedPos5;
                }
              } else {
                var result14 = null;
                pos = savedPos5;
              }
            } else {
              var result14 = null;
              pos = savedPos5;
            }
          } else {
            var result14 = null;
            pos = savedPos5;
          }
        } else {
          var result14 = null;
          pos = savedPos5;
        }
        var result15 = result14 !== null
          ? (function(a, b) { return { after:a, before:b }; })(result14[2], result14[6])
          : null;
        if (result15 !== null) {
          var result13 = result15;
        } else {
          var result13 = null;
          pos = savedPos4;
        }
        if (result13 !== null) {
          var result0 = result13;
        } else {
          var savedPos2 = pos;
          var savedPos3 = pos;
          if (input.substr(pos, 3) === "AFT") {
            var result10 = "AFT";
            pos += 3;
          } else {
            var result10 = null;
            if (reportMatchFailures) {
              matchFailed("\"AFT\"");
            }
          }
          if (result10 !== null) {
            var result11 = parse_S();
            if (result11 !== null) {
              var result12 = parse_date();
              if (result12 !== null) {
                var result8 = [result10, result11, result12];
              } else {
                var result8 = null;
                pos = savedPos3;
              }
            } else {
              var result8 = null;
              pos = savedPos3;
            }
          } else {
            var result8 = null;
            pos = savedPos3;
          }
          var result9 = result8 !== null
            ? (function(a) { return { after:a           }; })(result8[2])
            : null;
          if (result9 !== null) {
            var result7 = result9;
          } else {
            var result7 = null;
            pos = savedPos2;
          }
          if (result7 !== null) {
            var result0 = result7;
          } else {
            var savedPos0 = pos;
            var savedPos1 = pos;
            if (input.substr(pos, 3) === "BEF") {
              var result4 = "BEF";
              pos += 3;
            } else {
              var result4 = null;
              if (reportMatchFailures) {
                matchFailed("\"BEF\"");
              }
            }
            if (result4 !== null) {
              var result5 = parse_S();
              if (result5 !== null) {
                var result6 = parse_date();
                if (result6 !== null) {
                  var result2 = [result4, result5, result6];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
            var result3 = result2 !== null
              ? (function(b) { return {          before:b }; })(result2[2])
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_date_approx() {
        var cacheKey = 'date_approx@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos4 = pos;
        var savedPos5 = pos;
        if (input.substr(pos, 3) === "ABT") {
          var result16 = "ABT";
          pos += 3;
        } else {
          var result16 = null;
          if (reportMatchFailures) {
            matchFailed("\"ABT\"");
          }
        }
        if (result16 !== null) {
          var result17 = parse_S();
          if (result17 !== null) {
            var result18 = parse_date();
            if (result18 !== null) {
              var result14 = [result16, result17, result18];
            } else {
              var result14 = null;
              pos = savedPos5;
            }
          } else {
            var result14 = null;
            pos = savedPos5;
          }
        } else {
          var result14 = null;
          pos = savedPos5;
        }
        var result15 = result14 !== null
          ? (function(ymd) { ymd.approx=true; return ymd; })(result14[2])
          : null;
        if (result15 !== null) {
          var result13 = result15;
        } else {
          var result13 = null;
          pos = savedPos4;
        }
        if (result13 !== null) {
          var result0 = result13;
        } else {
          var savedPos2 = pos;
          var savedPos3 = pos;
          if (input.substr(pos, 3) === "CAL") {
            var result10 = "CAL";
            pos += 3;
          } else {
            var result10 = null;
            if (reportMatchFailures) {
              matchFailed("\"CAL\"");
            }
          }
          if (result10 !== null) {
            var result11 = parse_S();
            if (result11 !== null) {
              var result12 = parse_date();
              if (result12 !== null) {
                var result8 = [result10, result11, result12];
              } else {
                var result8 = null;
                pos = savedPos3;
              }
            } else {
              var result8 = null;
              pos = savedPos3;
            }
          } else {
            var result8 = null;
            pos = savedPos3;
          }
          var result9 = result8 !== null
            ? (function(ymd) { ymd.approx=true; return ymd; })(result8[2])
            : null;
          if (result9 !== null) {
            var result7 = result9;
          } else {
            var result7 = null;
            pos = savedPos2;
          }
          if (result7 !== null) {
            var result0 = result7;
          } else {
            var savedPos0 = pos;
            var savedPos1 = pos;
            if (input.substr(pos, 3) === "EST") {
              var result4 = "EST";
              pos += 3;
            } else {
              var result4 = null;
              if (reportMatchFailures) {
                matchFailed("\"EST\"");
              }
            }
            if (result4 !== null) {
              var result5 = parse_S();
              if (result5 !== null) {
                var result6 = parse_date();
                if (result6 !== null) {
                  var result2 = [result4, result5, result6];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
            var result3 = result2 !== null
              ? (function(ymd) { ymd.approx=true; return ymd; })(result2[2])
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_date() {
        var cacheKey = 'date@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos10 = pos;
        var savedPos11 = pos;
        if (input.substr(pos, 3) === "@#D") {
          var result43 = "@#D";
          pos += 3;
        } else {
          var result43 = null;
          if (reportMatchFailures) {
            matchFailed("\"@#D\"");
          }
        }
        if (result43 !== null) {
          if (input.substr(pos, 9) === "GREGORIAN") {
            var result44 = "GREGORIAN";
            pos += 9;
          } else {
            var result44 = null;
            if (reportMatchFailures) {
              matchFailed("\"GREGORIAN\"");
            }
          }
          if (result44 !== null) {
            if (input.substr(pos, 1) === "@") {
              var result45 = "@";
              pos += 1;
            } else {
              var result45 = null;
              if (reportMatchFailures) {
                matchFailed("\"@\"");
              }
            }
            if (result45 !== null) {
              var result46 = parse_OS();
              if (result46 !== null) {
                var result47 = parse_date_gregor();
                if (result47 !== null) {
                  var result41 = [result43, result44, result45, result46, result47];
                } else {
                  var result41 = null;
                  pos = savedPos11;
                }
              } else {
                var result41 = null;
                pos = savedPos11;
              }
            } else {
              var result41 = null;
              pos = savedPos11;
            }
          } else {
            var result41 = null;
            pos = savedPos11;
          }
        } else {
          var result41 = null;
          pos = savedPos11;
        }
        var result42 = result41 !== null
          ? (function(cal, ymd) { return ymd; })(result41[1], result41[4])
          : null;
        if (result42 !== null) {
          var result40 = result42;
        } else {
          var result40 = null;
          pos = savedPos10;
        }
        if (result40 !== null) {
          var result0 = result40;
        } else {
          var savedPos8 = pos;
          var savedPos9 = pos;
          if (input.substr(pos, 3) === "@#D") {
            var result35 = "@#D";
            pos += 3;
          } else {
            var result35 = null;
            if (reportMatchFailures) {
              matchFailed("\"@#D\"");
            }
          }
          if (result35 !== null) {
            if (input.substr(pos, 6) === "JULIAN") {
              var result36 = "JULIAN";
              pos += 6;
            } else {
              var result36 = null;
              if (reportMatchFailures) {
                matchFailed("\"JULIAN\"");
              }
            }
            if (result36 !== null) {
              if (input.substr(pos, 1) === "@") {
                var result37 = "@";
                pos += 1;
              } else {
                var result37 = null;
                if (reportMatchFailures) {
                  matchFailed("\"@\"");
                }
              }
              if (result37 !== null) {
                var result38 = parse_OS();
                if (result38 !== null) {
                  var result39 = parse_date_julian();
                  if (result39 !== null) {
                    var result33 = [result35, result36, result37, result38, result39];
                  } else {
                    var result33 = null;
                    pos = savedPos9;
                  }
                } else {
                  var result33 = null;
                  pos = savedPos9;
                }
              } else {
                var result33 = null;
                pos = savedPos9;
              }
            } else {
              var result33 = null;
              pos = savedPos9;
            }
          } else {
            var result33 = null;
            pos = savedPos9;
          }
          var result34 = result33 !== null
            ? (function(cal, ymd) { ymd.julian = true; return ymd; })(result33[1], result33[4])
            : null;
          if (result34 !== null) {
            var result32 = result34;
          } else {
            var result32 = null;
            pos = savedPos8;
          }
          if (result32 !== null) {
            var result0 = result32;
          } else {
            var savedPos6 = pos;
            var savedPos7 = pos;
            if (input.substr(pos, 3) === "@#D") {
              var result27 = "@#D";
              pos += 3;
            } else {
              var result27 = null;
              if (reportMatchFailures) {
                matchFailed("\"@#D\"");
              }
            }
            if (result27 !== null) {
              if (input.substr(pos, 6) === "HEBREW") {
                var result28 = "HEBREW";
                pos += 6;
              } else {
                var result28 = null;
                if (reportMatchFailures) {
                  matchFailed("\"HEBREW\"");
                }
              }
              if (result28 !== null) {
                if (input.substr(pos, 1) === "@") {
                  var result29 = "@";
                  pos += 1;
                } else {
                  var result29 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"@\"");
                  }
                }
                if (result29 !== null) {
                  var result30 = parse_OS();
                  if (result30 !== null) {
                    var result31 = parse_date_hebrew();
                    if (result31 !== null) {
                      var result25 = [result27, result28, result29, result30, result31];
                    } else {
                      var result25 = null;
                      pos = savedPos7;
                    }
                  } else {
                    var result25 = null;
                    pos = savedPos7;
                  }
                } else {
                  var result25 = null;
                  pos = savedPos7;
                }
              } else {
                var result25 = null;
                pos = savedPos7;
              }
            } else {
              var result25 = null;
              pos = savedPos7;
            }
            var result26 = result25 !== null
              ? (function(cal, ymd) { ymd.hebrew = true; return ymd; })(result25[1], result25[4])
              : null;
            if (result26 !== null) {
              var result24 = result26;
            } else {
              var result24 = null;
              pos = savedPos6;
            }
            if (result24 !== null) {
              var result0 = result24;
            } else {
              var savedPos4 = pos;
              var savedPos5 = pos;
              if (input.substr(pos, 3) === "@#D") {
                var result19 = "@#D";
                pos += 3;
              } else {
                var result19 = null;
                if (reportMatchFailures) {
                  matchFailed("\"@#D\"");
                }
              }
              if (result19 !== null) {
                if (input.substr(pos, 8) === "FRENCH R") {
                  var result20 = "FRENCH R";
                  pos += 8;
                } else {
                  var result20 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"FRENCH R\"");
                  }
                }
                if (result20 !== null) {
                  if (input.substr(pos, 1) === "@") {
                    var result21 = "@";
                    pos += 1;
                  } else {
                    var result21 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"@\"");
                    }
                  }
                  if (result21 !== null) {
                    var result22 = parse_OS();
                    if (result22 !== null) {
                      var result23 = parse_date_french();
                      if (result23 !== null) {
                        var result17 = [result19, result20, result21, result22, result23];
                      } else {
                        var result17 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result17 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result17 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result17 = null;
                  pos = savedPos5;
                }
              } else {
                var result17 = null;
                pos = savedPos5;
              }
              var result18 = result17 !== null
                ? (function(cal, ymd) { ymd.french = true; return ymd; })(result17[1], result17[4])
                : null;
              if (result18 !== null) {
                var result16 = result18;
              } else {
                var result16 = null;
                pos = savedPos4;
              }
              if (result16 !== null) {
                var result0 = result16;
              } else {
                var savedPos2 = pos;
                var savedPos3 = pos;
                if (input.substr(pos, 3) === "@#D") {
                  var result10 = "@#D";
                  pos += 3;
                } else {
                  var result10 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"@#D\"");
                  }
                }
                if (result10 !== null) {
                  var result11 = parse_other_cal();
                  if (result11 !== null) {
                    if (input.substr(pos, 1) === "@") {
                      var result12 = "@";
                      pos += 1;
                    } else {
                      var result12 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"@\"");
                      }
                    }
                    if (result12 !== null) {
                      var result13 = parse_OS();
                      if (result13 !== null) {
                        var result14 = [];
                        if (input.length > pos) {
                          var result15 = input.charAt(pos);
                          pos++;
                        } else {
                          var result15 = null;
                          if (reportMatchFailures) {
                            matchFailed('any character');
                          }
                        }
                        while (result15 !== null) {
                          result14.push(result15);
                          if (input.length > pos) {
                            var result15 = input.charAt(pos);
                            pos++;
                          } else {
                            var result15 = null;
                            if (reportMatchFailures) {
                              matchFailed('any character');
                            }
                          }
                        }
                        if (result14 !== null) {
                          var result8 = [result10, result11, result12, result13, result14];
                        } else {
                          var result8 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result8 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result8 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result8 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result8 = null;
                  pos = savedPos3;
                }
                var result9 = result8 !== null
                  ? (function(cal, str) { return cal+": "+str.join(""); })(result8[1], result8[4])
                  : null;
                if (result9 !== null) {
                  var result7 = result9;
                } else {
                  var result7 = null;
                  pos = savedPos2;
                }
                if (result7 !== null) {
                  var result0 = result7;
                } else {
                  var savedPos1 = pos;
                  var result5 = parse_date_slash();
                  var result6 = result5 !== null
                    ? (function(ymd) { ymd.julian = true; return ymd; })(result5)
                    : null;
                  if (result6 !== null) {
                    var result4 = result6;
                  } else {
                    var result4 = null;
                    pos = savedPos1;
                  }
                  if (result4 !== null) {
                    var result0 = result4;
                  } else {
                    var savedPos0 = pos;
                    var result2 = parse_date_gregor();
                    var result3 = result2 !== null
                      ? (function(ymd) { return ymd; })(result2)
                      : null;
                    if (result3 !== null) {
                      var result1 = result3;
                    } else {
                      var result1 = null;
                      pos = savedPos0;
                    }
                    if (result1 !== null) {
                      var result0 = result1;
                    } else {
                      var result0 = null;;
                    };
                  };
                };
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_other_cal() {
        var cacheKey = 'other_cal@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var savedPos2 = pos;
        var savedReportMatchFailuresVar0 = reportMatchFailures;
        reportMatchFailures = false;
        var result6 = parse_known_cal();
        reportMatchFailures = savedReportMatchFailuresVar0;
        if (result6 === null) {
          var result3 = '';
        } else {
          var result3 = null;
          pos = savedPos2;
        }
        if (result3 !== null) {
          if (input.substr(pos).match(/^[^@]/) !== null) {
            var result5 = input.charAt(pos);
            pos++;
          } else {
            var result5 = null;
            if (reportMatchFailures) {
              matchFailed("[^@]");
            }
          }
          if (result5 !== null) {
            var result4 = [];
            while (result5 !== null) {
              result4.push(result5);
              if (input.substr(pos).match(/^[^@]/) !== null) {
                var result5 = input.charAt(pos);
                pos++;
              } else {
                var result5 = null;
                if (reportMatchFailures) {
                  matchFailed("[^@]");
                }
              }
            }
          } else {
            var result4 = null;
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(cal) { return cal.join(""); })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_known_cal() {
        var cacheKey = 'known_cal@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos, 9) === "GREGORIAN") {
          var result4 = "GREGORIAN";
          pos += 9;
        } else {
          var result4 = null;
          if (reportMatchFailures) {
            matchFailed("\"GREGORIAN\"");
          }
        }
        if (result4 !== null) {
          var result0 = result4;
        } else {
          if (input.substr(pos, 6) === "JULIAN") {
            var result3 = "JULIAN";
            pos += 6;
          } else {
            var result3 = null;
            if (reportMatchFailures) {
              matchFailed("\"JULIAN\"");
            }
          }
          if (result3 !== null) {
            var result0 = result3;
          } else {
            if (input.substr(pos, 6) === "HEBREW") {
              var result2 = "HEBREW";
              pos += 6;
            } else {
              var result2 = null;
              if (reportMatchFailures) {
                matchFailed("\"HEBREW\"");
              }
            }
            if (result2 !== null) {
              var result0 = result2;
            } else {
              if (input.substr(pos, 8) === "FRENCH R") {
                var result1 = "FRENCH R";
                pos += 8;
              } else {
                var result1 = null;
                if (reportMatchFailures) {
                  matchFailed("\"FRENCH R\"");
                }
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_date_gregor() {
        var cacheKey = 'date_gregor@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result5 = parse_date_gregor_raw();
        if (result5 !== null) {
          var result6 = parse_S();
          if (result6 !== null) {
            var result7 = parse_epoch();
            if (result7 !== null) {
              var result3 = [result5, result6, result7];
            } else {
              var result3 = null;
              pos = savedPos1;
            }
          } else {
            var result3 = null;
            pos = savedPos1;
          }
        } else {
          var result3 = null;
          pos = savedPos1;
        }
        var result4 = result3 !== null
          ? (function(ymd, e) { ymd.year *= e; return ymd; })(result3[0], result3[2])
          : null;
        if (result4 !== null) {
          var result2 = result4;
        } else {
          var result2 = null;
          pos = savedPos0;
        }
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result1 = parse_date_gregor_raw();
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_date_julian() {
        var cacheKey = 'date_julian@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result5 = parse_date_julian_raw();
        if (result5 !== null) {
          var result6 = parse_S();
          if (result6 !== null) {
            var result7 = parse_epoch();
            if (result7 !== null) {
              var result3 = [result5, result6, result7];
            } else {
              var result3 = null;
              pos = savedPos1;
            }
          } else {
            var result3 = null;
            pos = savedPos1;
          }
        } else {
          var result3 = null;
          pos = savedPos1;
        }
        var result4 = result3 !== null
          ? (function(ymd, e) { ymd.year *= e; return ymd; })(result3[0], result3[2])
          : null;
        if (result4 !== null) {
          var result2 = result4;
        } else {
          var result2 = null;
          pos = savedPos0;
        }
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result1 = parse_date_julian_raw();
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_date_hebrew() {
        var cacheKey = 'date_hebrew@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos3 = pos;
        var savedPos4 = pos;
        var result13 = parse_N();
        if (result13 !== null) {
          var result14 = parse_S();
          if (result14 !== null) {
            var result15 = parse_month_hebr();
            if (result15 !== null) {
              var result16 = parse_S();
              if (result16 !== null) {
                var result17 = parse_year();
                if (result17 !== null) {
                  var result11 = [result13, result14, result15, result16, result17];
                } else {
                  var result11 = null;
                  pos = savedPos4;
                }
              } else {
                var result11 = null;
                pos = savedPos4;
              }
            } else {
              var result11 = null;
              pos = savedPos4;
            }
          } else {
            var result11 = null;
            pos = savedPos4;
          }
        } else {
          var result11 = null;
          pos = savedPos4;
        }
        var result12 = result11 !== null
          ? (function(d, m, y) { return { day:d, month:m, year:y }; })(result11[0], result11[2], result11[4])
          : null;
        if (result12 !== null) {
          var result10 = result12;
        } else {
          var result10 = null;
          pos = savedPos3;
        }
        if (result10 !== null) {
          var result0 = result10;
        } else {
          var savedPos1 = pos;
          var savedPos2 = pos;
          var result7 = parse_month_hebr();
          if (result7 !== null) {
            var result8 = parse_S();
            if (result8 !== null) {
              var result9 = parse_year();
              if (result9 !== null) {
                var result5 = [result7, result8, result9];
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          var result6 = result5 !== null
            ? (function(m, y) { return { day:0, month:m, year:y }; })(result5[0], result5[2])
            : null;
          if (result6 !== null) {
            var result4 = result6;
          } else {
            var result4 = null;
            pos = savedPos1;
          }
          if (result4 !== null) {
            var result0 = result4;
          } else {
            var savedPos0 = pos;
            var result2 = parse_year();
            var result3 = result2 !== null
              ? (function(y) { return { day:0, month:0, year:y }; })(result2)
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_date_french() {
        var cacheKey = 'date_french@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos3 = pos;
        var savedPos4 = pos;
        var result13 = parse_N();
        if (result13 !== null) {
          var result14 = parse_S();
          if (result14 !== null) {
            var result15 = parse_month_fren();
            if (result15 !== null) {
              var result16 = parse_S();
              if (result16 !== null) {
                var result17 = parse_year();
                if (result17 !== null) {
                  var result11 = [result13, result14, result15, result16, result17];
                } else {
                  var result11 = null;
                  pos = savedPos4;
                }
              } else {
                var result11 = null;
                pos = savedPos4;
              }
            } else {
              var result11 = null;
              pos = savedPos4;
            }
          } else {
            var result11 = null;
            pos = savedPos4;
          }
        } else {
          var result11 = null;
          pos = savedPos4;
        }
        var result12 = result11 !== null
          ? (function(d, m, y) { return { day:d, month:m, year:y }; })(result11[0], result11[2], result11[4])
          : null;
        if (result12 !== null) {
          var result10 = result12;
        } else {
          var result10 = null;
          pos = savedPos3;
        }
        if (result10 !== null) {
          var result0 = result10;
        } else {
          var savedPos1 = pos;
          var savedPos2 = pos;
          var result7 = parse_month_fren();
          if (result7 !== null) {
            var result8 = parse_S();
            if (result8 !== null) {
              var result9 = parse_year();
              if (result9 !== null) {
                var result5 = [result7, result8, result9];
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          var result6 = result5 !== null
            ? (function(m, y) { return { day:0, month:m, year:y }; })(result5[0], result5[2])
            : null;
          if (result6 !== null) {
            var result4 = result6;
          } else {
            var result4 = null;
            pos = savedPos1;
          }
          if (result4 !== null) {
            var result0 = result4;
          } else {
            var savedPos0 = pos;
            var result2 = parse_year();
            var result3 = result2 !== null
              ? (function(y) { return { day:0, month:0, year:y }; })(result2)
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_date_slash() {
        var cacheKey = 'date_slash@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos3 = pos;
        var savedPos4 = pos;
        var result13 = parse_N();
        if (result13 !== null) {
          var result14 = parse_S();
          if (result14 !== null) {
            var result15 = parse_month_engl();
            if (result15 !== null) {
              var result16 = parse_S();
              if (result16 !== null) {
                var result17 = parse_year_slash();
                if (result17 !== null) {
                  var result11 = [result13, result14, result15, result16, result17];
                } else {
                  var result11 = null;
                  pos = savedPos4;
                }
              } else {
                var result11 = null;
                pos = savedPos4;
              }
            } else {
              var result11 = null;
              pos = savedPos4;
            }
          } else {
            var result11 = null;
            pos = savedPos4;
          }
        } else {
          var result11 = null;
          pos = savedPos4;
        }
        var result12 = result11 !== null
          ? (function(d, m, y) { return { day:d, month:m, year:y }; })(result11[0], result11[2], result11[4])
          : null;
        if (result12 !== null) {
          var result10 = result12;
        } else {
          var result10 = null;
          pos = savedPos3;
        }
        if (result10 !== null) {
          var result0 = result10;
        } else {
          var savedPos1 = pos;
          var savedPos2 = pos;
          var result7 = parse_month_engl();
          if (result7 !== null) {
            var result8 = parse_S();
            if (result8 !== null) {
              var result9 = parse_year_slash();
              if (result9 !== null) {
                var result5 = [result7, result8, result9];
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          var result6 = result5 !== null
            ? (function(m, y) { return { day:0, month:m, year:y }; })(result5[0], result5[2])
            : null;
          if (result6 !== null) {
            var result4 = result6;
          } else {
            var result4 = null;
            pos = savedPos1;
          }
          if (result4 !== null) {
            var result0 = result4;
          } else {
            var savedPos0 = pos;
            var result2 = parse_year_slash();
            var result3 = result2 !== null
              ? (function(y) { return { day:0, month:0, year:y }; })(result2)
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_date_gregor_raw() {
        var cacheKey = 'date_gregor_raw@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos3 = pos;
        var savedPos4 = pos;
        var result13 = parse_N();
        if (result13 !== null) {
          var result14 = parse_S();
          if (result14 !== null) {
            var result15 = parse_month_engl();
            if (result15 !== null) {
              var result16 = parse_S();
              if (result16 !== null) {
                var result17 = parse_year();
                if (result17 !== null) {
                  var result11 = [result13, result14, result15, result16, result17];
                } else {
                  var result11 = null;
                  pos = savedPos4;
                }
              } else {
                var result11 = null;
                pos = savedPos4;
              }
            } else {
              var result11 = null;
              pos = savedPos4;
            }
          } else {
            var result11 = null;
            pos = savedPos4;
          }
        } else {
          var result11 = null;
          pos = savedPos4;
        }
        var result12 = result11 !== null
          ? (function(d, m, y) { return { day:d, month:m, year:y }; })(result11[0], result11[2], result11[4])
          : null;
        if (result12 !== null) {
          var result10 = result12;
        } else {
          var result10 = null;
          pos = savedPos3;
        }
        if (result10 !== null) {
          var result0 = result10;
        } else {
          var savedPos1 = pos;
          var savedPos2 = pos;
          var result7 = parse_month_engl();
          if (result7 !== null) {
            var result8 = parse_S();
            if (result8 !== null) {
              var result9 = parse_year();
              if (result9 !== null) {
                var result5 = [result7, result8, result9];
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          var result6 = result5 !== null
            ? (function(m, y) { return { day:0, month:m, year:y }; })(result5[0], result5[2])
            : null;
          if (result6 !== null) {
            var result4 = result6;
          } else {
            var result4 = null;
            pos = savedPos1;
          }
          if (result4 !== null) {
            var result0 = result4;
          } else {
            var savedPos0 = pos;
            var result2 = parse_year();
            var result3 = result2 !== null
              ? (function(y) { return { day:0, month:0, year:y }; })(result2)
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_date_julian_raw() {
        var cacheKey = 'date_julian_raw@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos3 = pos;
        var savedPos4 = pos;
        var result13 = parse_N();
        if (result13 !== null) {
          var result14 = parse_S();
          if (result14 !== null) {
            var result15 = parse_month_engl();
            if (result15 !== null) {
              var result16 = parse_S();
              if (result16 !== null) {
                var result17 = parse_year_julian();
                if (result17 !== null) {
                  var result11 = [result13, result14, result15, result16, result17];
                } else {
                  var result11 = null;
                  pos = savedPos4;
                }
              } else {
                var result11 = null;
                pos = savedPos4;
              }
            } else {
              var result11 = null;
              pos = savedPos4;
            }
          } else {
            var result11 = null;
            pos = savedPos4;
          }
        } else {
          var result11 = null;
          pos = savedPos4;
        }
        var result12 = result11 !== null
          ? (function(d, m, y) { return { day:d, month:m, year:y }; })(result11[0], result11[2], result11[4])
          : null;
        if (result12 !== null) {
          var result10 = result12;
        } else {
          var result10 = null;
          pos = savedPos3;
        }
        if (result10 !== null) {
          var result0 = result10;
        } else {
          var savedPos1 = pos;
          var savedPos2 = pos;
          var result7 = parse_month_engl();
          if (result7 !== null) {
            var result8 = parse_S();
            if (result8 !== null) {
              var result9 = parse_year_julian();
              if (result9 !== null) {
                var result5 = [result7, result8, result9];
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          var result6 = result5 !== null
            ? (function(m, y) { return { day:0, month:m, year:y }; })(result5[0], result5[2])
            : null;
          if (result6 !== null) {
            var result4 = result6;
          } else {
            var result4 = null;
            pos = savedPos1;
          }
          if (result4 !== null) {
            var result0 = result4;
          } else {
            var savedPos0 = pos;
            var result2 = parse_year_julian();
            var result3 = result2 !== null
              ? (function(y) { return { day:0, month:0, year:y }; })(result2)
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_year_julian() {
        var cacheKey = 'year_julian@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var result2 = parse_year_slash();
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result1 = parse_year();
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_year_slash() {
        var cacheKey = 'year_slash@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_year();
        if (result3 !== null) {
          if (input.substr(pos, 1) === "/") {
            var result4 = "/";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"/\"");
            }
          }
          if (result4 !== null) {
            var result5 = parse_N();
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(y) { return y+1; })(result1[0])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_year() {
        var cacheKey = 'year@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var result1 = parse_N();
        var result2 = result1 !== null
          ? (function(y) { return (y==0) ? null : y; })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_N() {
        var cacheKey = 'N@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        if (input.substr(pos).match(/^[0-9]/) !== null) {
          var result3 = input.charAt(pos);
          pos++;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("[0-9]");
          }
        }
        if (result3 !== null) {
          var result1 = [];
          while (result3 !== null) {
            result1.push(result3);
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result3 = input.charAt(pos);
              pos++;
            } else {
              var result3 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
          }
        } else {
          var result1 = null;
        }
        var result2 = result1 !== null
          ? (function(digits) { return parseInt(digits.join(""),10); })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_S() {
        var cacheKey = 'S@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos, 1) === " ") {
          var result1 = " ";
          pos += 1;
        } else {
          var result1 = null;
          if (reportMatchFailures) {
            matchFailed("\" \"");
          }
        }
        if (result1 !== null) {
          var result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            if (input.substr(pos, 1) === " ") {
              var result1 = " ";
              pos += 1;
            } else {
              var result1 = null;
              if (reportMatchFailures) {
                matchFailed("\" \"");
              }
            }
          }
        } else {
          var result0 = null;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_OS() {
        var cacheKey = 'OS@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var result0 = [];
        if (input.substr(pos, 1) === " ") {
          var result1 = " ";
          pos += 1;
        } else {
          var result1 = null;
          if (reportMatchFailures) {
            matchFailed("\" \"");
          }
        }
        while (result1 !== null) {
          result0.push(result1);
          if (input.substr(pos, 1) === " ") {
            var result1 = " ";
            pos += 1;
          } else {
            var result1 = null;
            if (reportMatchFailures) {
              matchFailed("\" \"");
            }
          }
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_epoch() {
        var cacheKey = 'epoch@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos1 = pos;
        if (input.substr(pos, 2) === "BC") {
          var result14 = "BC";
          pos += 2;
        } else {
          var result14 = null;
          if (reportMatchFailures) {
            matchFailed("\"BC\"");
          }
        }
        if (result14 !== null) {
          var result9 = result14;
        } else {
          if (input.substr(pos, 4) === "B.C.") {
            var result13 = "B.C.";
            pos += 4;
          } else {
            var result13 = null;
            if (reportMatchFailures) {
              matchFailed("\"B.C.\"");
            }
          }
          if (result13 !== null) {
            var result9 = result13;
          } else {
            if (input.substr(pos, 3) === "BCE") {
              var result12 = "BCE";
              pos += 3;
            } else {
              var result12 = null;
              if (reportMatchFailures) {
                matchFailed("\"BCE\"");
              }
            }
            if (result12 !== null) {
              var result9 = result12;
            } else {
              if (input.substr(pos, 6) === "B.C.E.") {
                var result11 = "B.C.E.";
                pos += 6;
              } else {
                var result11 = null;
                if (reportMatchFailures) {
                  matchFailed("\"B.C.E.\"");
                }
              }
              if (result11 !== null) {
                var result9 = result11;
              } else {
                var result9 = null;;
              };
            };
          };
        }
        var result10 = result9 !== null
          ? (function() { return -1; })()
          : null;
        if (result10 !== null) {
          var result8 = result10;
        } else {
          var result8 = null;
          pos = savedPos1;
        }
        if (result8 !== null) {
          var result0 = result8;
        } else {
          var savedPos0 = pos;
          if (input.substr(pos, 2) === "AD") {
            var result7 = "AD";
            pos += 2;
          } else {
            var result7 = null;
            if (reportMatchFailures) {
              matchFailed("\"AD\"");
            }
          }
          if (result7 !== null) {
            var result2 = result7;
          } else {
            if (input.substr(pos, 4) === "A.D.") {
              var result6 = "A.D.";
              pos += 4;
            } else {
              var result6 = null;
              if (reportMatchFailures) {
                matchFailed("\"A.D.\"");
              }
            }
            if (result6 !== null) {
              var result2 = result6;
            } else {
              if (input.substr(pos, 2) === "CE") {
                var result5 = "CE";
                pos += 2;
              } else {
                var result5 = null;
                if (reportMatchFailures) {
                  matchFailed("\"CE\"");
                }
              }
              if (result5 !== null) {
                var result2 = result5;
              } else {
                if (input.substr(pos, 4) === "C.E.") {
                  var result4 = "C.E.";
                  pos += 4;
                } else {
                  var result4 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"C.E.\"");
                  }
                }
                if (result4 !== null) {
                  var result2 = result4;
                } else {
                  var result2 = null;;
                };
              };
            };
          }
          var result3 = result2 !== null
            ? (function() { return  1; })()
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_month_engl() {
        var cacheKey = 'month_engl@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos11 = pos;
        if (input.substr(pos, 3) === "JAN") {
          var result35 = "JAN";
          pos += 3;
        } else {
          var result35 = null;
          if (reportMatchFailures) {
            matchFailed("\"JAN\"");
          }
        }
        var result36 = result35 !== null
          ? (function() { return  1; })()
          : null;
        if (result36 !== null) {
          var result34 = result36;
        } else {
          var result34 = null;
          pos = savedPos11;
        }
        if (result34 !== null) {
          var result0 = result34;
        } else {
          var savedPos10 = pos;
          if (input.substr(pos, 3) === "FEB") {
            var result32 = "FEB";
            pos += 3;
          } else {
            var result32 = null;
            if (reportMatchFailures) {
              matchFailed("\"FEB\"");
            }
          }
          var result33 = result32 !== null
            ? (function() { return  2; })()
            : null;
          if (result33 !== null) {
            var result31 = result33;
          } else {
            var result31 = null;
            pos = savedPos10;
          }
          if (result31 !== null) {
            var result0 = result31;
          } else {
            var savedPos9 = pos;
            if (input.substr(pos, 3) === "MAR") {
              var result29 = "MAR";
              pos += 3;
            } else {
              var result29 = null;
              if (reportMatchFailures) {
                matchFailed("\"MAR\"");
              }
            }
            var result30 = result29 !== null
              ? (function() { return  3; })()
              : null;
            if (result30 !== null) {
              var result28 = result30;
            } else {
              var result28 = null;
              pos = savedPos9;
            }
            if (result28 !== null) {
              var result0 = result28;
            } else {
              var savedPos8 = pos;
              if (input.substr(pos, 3) === "APR") {
                var result26 = "APR";
                pos += 3;
              } else {
                var result26 = null;
                if (reportMatchFailures) {
                  matchFailed("\"APR\"");
                }
              }
              var result27 = result26 !== null
                ? (function() { return  4; })()
                : null;
              if (result27 !== null) {
                var result25 = result27;
              } else {
                var result25 = null;
                pos = savedPos8;
              }
              if (result25 !== null) {
                var result0 = result25;
              } else {
                var savedPos7 = pos;
                if (input.substr(pos, 3) === "MAY") {
                  var result23 = "MAY";
                  pos += 3;
                } else {
                  var result23 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"MAY\"");
                  }
                }
                var result24 = result23 !== null
                  ? (function() { return  5; })()
                  : null;
                if (result24 !== null) {
                  var result22 = result24;
                } else {
                  var result22 = null;
                  pos = savedPos7;
                }
                if (result22 !== null) {
                  var result0 = result22;
                } else {
                  var savedPos6 = pos;
                  if (input.substr(pos, 3) === "JUN") {
                    var result20 = "JUN";
                    pos += 3;
                  } else {
                    var result20 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"JUN\"");
                    }
                  }
                  var result21 = result20 !== null
                    ? (function() { return  6; })()
                    : null;
                  if (result21 !== null) {
                    var result19 = result21;
                  } else {
                    var result19 = null;
                    pos = savedPos6;
                  }
                  if (result19 !== null) {
                    var result0 = result19;
                  } else {
                    var savedPos5 = pos;
                    if (input.substr(pos, 3) === "JUL") {
                      var result17 = "JUL";
                      pos += 3;
                    } else {
                      var result17 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"JUL\"");
                      }
                    }
                    var result18 = result17 !== null
                      ? (function() { return  7; })()
                      : null;
                    if (result18 !== null) {
                      var result16 = result18;
                    } else {
                      var result16 = null;
                      pos = savedPos5;
                    }
                    if (result16 !== null) {
                      var result0 = result16;
                    } else {
                      var savedPos4 = pos;
                      if (input.substr(pos, 3) === "AUG") {
                        var result14 = "AUG";
                        pos += 3;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"AUG\"");
                        }
                      }
                      var result15 = result14 !== null
                        ? (function() { return  8; })()
                        : null;
                      if (result15 !== null) {
                        var result13 = result15;
                      } else {
                        var result13 = null;
                        pos = savedPos4;
                      }
                      if (result13 !== null) {
                        var result0 = result13;
                      } else {
                        var savedPos3 = pos;
                        if (input.substr(pos, 3) === "SEP") {
                          var result11 = "SEP";
                          pos += 3;
                        } else {
                          var result11 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"SEP\"");
                          }
                        }
                        var result12 = result11 !== null
                          ? (function() { return  9; })()
                          : null;
                        if (result12 !== null) {
                          var result10 = result12;
                        } else {
                          var result10 = null;
                          pos = savedPos3;
                        }
                        if (result10 !== null) {
                          var result0 = result10;
                        } else {
                          var savedPos2 = pos;
                          if (input.substr(pos, 3) === "OCT") {
                            var result8 = "OCT";
                            pos += 3;
                          } else {
                            var result8 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"OCT\"");
                            }
                          }
                          var result9 = result8 !== null
                            ? (function() { return 10; })()
                            : null;
                          if (result9 !== null) {
                            var result7 = result9;
                          } else {
                            var result7 = null;
                            pos = savedPos2;
                          }
                          if (result7 !== null) {
                            var result0 = result7;
                          } else {
                            var savedPos1 = pos;
                            if (input.substr(pos, 3) === "NOV") {
                              var result5 = "NOV";
                              pos += 3;
                            } else {
                              var result5 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"NOV\"");
                              }
                            }
                            var result6 = result5 !== null
                              ? (function() { return 11; })()
                              : null;
                            if (result6 !== null) {
                              var result4 = result6;
                            } else {
                              var result4 = null;
                              pos = savedPos1;
                            }
                            if (result4 !== null) {
                              var result0 = result4;
                            } else {
                              var savedPos0 = pos;
                              if (input.substr(pos, 3) === "DEC") {
                                var result2 = "DEC";
                                pos += 3;
                              } else {
                                var result2 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"DEC\"");
                                }
                              }
                              var result3 = result2 !== null
                                ? (function() { return 12; })()
                                : null;
                              if (result3 !== null) {
                                var result1 = result3;
                              } else {
                                var result1 = null;
                                pos = savedPos0;
                              }
                              if (result1 !== null) {
                                var result0 = result1;
                              } else {
                                var result0 = null;;
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_month_fren() {
        var cacheKey = 'month_fren@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos12 = pos;
        if (input.substr(pos, 4) === "VEND") {
          var result38 = "VEND";
          pos += 4;
        } else {
          var result38 = null;
          if (reportMatchFailures) {
            matchFailed("\"VEND\"");
          }
        }
        var result39 = result38 !== null
          ? (function() { return  1; })()
          : null;
        if (result39 !== null) {
          var result37 = result39;
        } else {
          var result37 = null;
          pos = savedPos12;
        }
        if (result37 !== null) {
          var result0 = result37;
        } else {
          var savedPos11 = pos;
          if (input.substr(pos, 4) === "BRUM") {
            var result35 = "BRUM";
            pos += 4;
          } else {
            var result35 = null;
            if (reportMatchFailures) {
              matchFailed("\"BRUM\"");
            }
          }
          var result36 = result35 !== null
            ? (function() { return  2; })()
            : null;
          if (result36 !== null) {
            var result34 = result36;
          } else {
            var result34 = null;
            pos = savedPos11;
          }
          if (result34 !== null) {
            var result0 = result34;
          } else {
            var savedPos10 = pos;
            if (input.substr(pos, 4) === "FRIM") {
              var result32 = "FRIM";
              pos += 4;
            } else {
              var result32 = null;
              if (reportMatchFailures) {
                matchFailed("\"FRIM\"");
              }
            }
            var result33 = result32 !== null
              ? (function() { return  3; })()
              : null;
            if (result33 !== null) {
              var result31 = result33;
            } else {
              var result31 = null;
              pos = savedPos10;
            }
            if (result31 !== null) {
              var result0 = result31;
            } else {
              var savedPos9 = pos;
              if (input.substr(pos, 4) === "NIVO") {
                var result29 = "NIVO";
                pos += 4;
              } else {
                var result29 = null;
                if (reportMatchFailures) {
                  matchFailed("\"NIVO\"");
                }
              }
              var result30 = result29 !== null
                ? (function() { return  4; })()
                : null;
              if (result30 !== null) {
                var result28 = result30;
              } else {
                var result28 = null;
                pos = savedPos9;
              }
              if (result28 !== null) {
                var result0 = result28;
              } else {
                var savedPos8 = pos;
                if (input.substr(pos, 4) === "PLUV") {
                  var result26 = "PLUV";
                  pos += 4;
                } else {
                  var result26 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"PLUV\"");
                  }
                }
                var result27 = result26 !== null
                  ? (function() { return  5; })()
                  : null;
                if (result27 !== null) {
                  var result25 = result27;
                } else {
                  var result25 = null;
                  pos = savedPos8;
                }
                if (result25 !== null) {
                  var result0 = result25;
                } else {
                  var savedPos7 = pos;
                  if (input.substr(pos, 4) === "VENT") {
                    var result23 = "VENT";
                    pos += 4;
                  } else {
                    var result23 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"VENT\"");
                    }
                  }
                  var result24 = result23 !== null
                    ? (function() { return  6; })()
                    : null;
                  if (result24 !== null) {
                    var result22 = result24;
                  } else {
                    var result22 = null;
                    pos = savedPos7;
                  }
                  if (result22 !== null) {
                    var result0 = result22;
                  } else {
                    var savedPos6 = pos;
                    if (input.substr(pos, 4) === "GERM") {
                      var result20 = "GERM";
                      pos += 4;
                    } else {
                      var result20 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"GERM\"");
                      }
                    }
                    var result21 = result20 !== null
                      ? (function() { return  7; })()
                      : null;
                    if (result21 !== null) {
                      var result19 = result21;
                    } else {
                      var result19 = null;
                      pos = savedPos6;
                    }
                    if (result19 !== null) {
                      var result0 = result19;
                    } else {
                      var savedPos5 = pos;
                      if (input.substr(pos, 4) === "FLOR") {
                        var result17 = "FLOR";
                        pos += 4;
                      } else {
                        var result17 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"FLOR\"");
                        }
                      }
                      var result18 = result17 !== null
                        ? (function() { return  8; })()
                        : null;
                      if (result18 !== null) {
                        var result16 = result18;
                      } else {
                        var result16 = null;
                        pos = savedPos5;
                      }
                      if (result16 !== null) {
                        var result0 = result16;
                      } else {
                        var savedPos4 = pos;
                        if (input.substr(pos, 4) === "PRAI") {
                          var result14 = "PRAI";
                          pos += 4;
                        } else {
                          var result14 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"PRAI\"");
                          }
                        }
                        var result15 = result14 !== null
                          ? (function() { return  9; })()
                          : null;
                        if (result15 !== null) {
                          var result13 = result15;
                        } else {
                          var result13 = null;
                          pos = savedPos4;
                        }
                        if (result13 !== null) {
                          var result0 = result13;
                        } else {
                          var savedPos3 = pos;
                          if (input.substr(pos, 4) === "MESS") {
                            var result11 = "MESS";
                            pos += 4;
                          } else {
                            var result11 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"MESS\"");
                            }
                          }
                          var result12 = result11 !== null
                            ? (function() { return 10; })()
                            : null;
                          if (result12 !== null) {
                            var result10 = result12;
                          } else {
                            var result10 = null;
                            pos = savedPos3;
                          }
                          if (result10 !== null) {
                            var result0 = result10;
                          } else {
                            var savedPos2 = pos;
                            if (input.substr(pos, 4) === "THER") {
                              var result8 = "THER";
                              pos += 4;
                            } else {
                              var result8 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"THER\"");
                              }
                            }
                            var result9 = result8 !== null
                              ? (function() { return 11; })()
                              : null;
                            if (result9 !== null) {
                              var result7 = result9;
                            } else {
                              var result7 = null;
                              pos = savedPos2;
                            }
                            if (result7 !== null) {
                              var result0 = result7;
                            } else {
                              var savedPos1 = pos;
                              if (input.substr(pos, 4) === "FRUC") {
                                var result5 = "FRUC";
                                pos += 4;
                              } else {
                                var result5 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"FRUC\"");
                                }
                              }
                              var result6 = result5 !== null
                                ? (function() { return 12; })()
                                : null;
                              if (result6 !== null) {
                                var result4 = result6;
                              } else {
                                var result4 = null;
                                pos = savedPos1;
                              }
                              if (result4 !== null) {
                                var result0 = result4;
                              } else {
                                var savedPos0 = pos;
                                if (input.substr(pos, 4) === "COMP") {
                                  var result2 = "COMP";
                                  pos += 4;
                                } else {
                                  var result2 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"COMP\"");
                                  }
                                }
                                var result3 = result2 !== null
                                  ? (function() { return 13; })()
                                  : null;
                                if (result3 !== null) {
                                  var result1 = result3;
                                } else {
                                  var result1 = null;
                                  pos = savedPos0;
                                }
                                if (result1 !== null) {
                                  var result0 = result1;
                                } else {
                                  var result0 = null;;
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_month_hebr() {
        var cacheKey = 'month_hebr@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos12 = pos;
        if (input.substr(pos, 3) === "NSN") {
          var result38 = "NSN";
          pos += 3;
        } else {
          var result38 = null;
          if (reportMatchFailures) {
            matchFailed("\"NSN\"");
          }
        }
        var result39 = result38 !== null
          ? (function() { return  1; })()
          : null;
        if (result39 !== null) {
          var result37 = result39;
        } else {
          var result37 = null;
          pos = savedPos12;
        }
        if (result37 !== null) {
          var result0 = result37;
        } else {
          var savedPos11 = pos;
          if (input.substr(pos, 3) === "IYR") {
            var result35 = "IYR";
            pos += 3;
          } else {
            var result35 = null;
            if (reportMatchFailures) {
              matchFailed("\"IYR\"");
            }
          }
          var result36 = result35 !== null
            ? (function() { return  2; })()
            : null;
          if (result36 !== null) {
            var result34 = result36;
          } else {
            var result34 = null;
            pos = savedPos11;
          }
          if (result34 !== null) {
            var result0 = result34;
          } else {
            var savedPos10 = pos;
            if (input.substr(pos, 3) === "SVN") {
              var result32 = "SVN";
              pos += 3;
            } else {
              var result32 = null;
              if (reportMatchFailures) {
                matchFailed("\"SVN\"");
              }
            }
            var result33 = result32 !== null
              ? (function() { return  3; })()
              : null;
            if (result33 !== null) {
              var result31 = result33;
            } else {
              var result31 = null;
              pos = savedPos10;
            }
            if (result31 !== null) {
              var result0 = result31;
            } else {
              var savedPos9 = pos;
              if (input.substr(pos, 3) === "TMZ") {
                var result29 = "TMZ";
                pos += 3;
              } else {
                var result29 = null;
                if (reportMatchFailures) {
                  matchFailed("\"TMZ\"");
                }
              }
              var result30 = result29 !== null
                ? (function() { return  4; })()
                : null;
              if (result30 !== null) {
                var result28 = result30;
              } else {
                var result28 = null;
                pos = savedPos9;
              }
              if (result28 !== null) {
                var result0 = result28;
              } else {
                var savedPos8 = pos;
                if (input.substr(pos, 3) === "AAV") {
                  var result26 = "AAV";
                  pos += 3;
                } else {
                  var result26 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"AAV\"");
                  }
                }
                var result27 = result26 !== null
                  ? (function() { return  5; })()
                  : null;
                if (result27 !== null) {
                  var result25 = result27;
                } else {
                  var result25 = null;
                  pos = savedPos8;
                }
                if (result25 !== null) {
                  var result0 = result25;
                } else {
                  var savedPos7 = pos;
                  if (input.substr(pos, 3) === "ELL") {
                    var result23 = "ELL";
                    pos += 3;
                  } else {
                    var result23 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"ELL\"");
                    }
                  }
                  var result24 = result23 !== null
                    ? (function() { return  6; })()
                    : null;
                  if (result24 !== null) {
                    var result22 = result24;
                  } else {
                    var result22 = null;
                    pos = savedPos7;
                  }
                  if (result22 !== null) {
                    var result0 = result22;
                  } else {
                    var savedPos6 = pos;
                    if (input.substr(pos, 3) === "TSH") {
                      var result20 = "TSH";
                      pos += 3;
                    } else {
                      var result20 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"TSH\"");
                      }
                    }
                    var result21 = result20 !== null
                      ? (function() { return  7; })()
                      : null;
                    if (result21 !== null) {
                      var result19 = result21;
                    } else {
                      var result19 = null;
                      pos = savedPos6;
                    }
                    if (result19 !== null) {
                      var result0 = result19;
                    } else {
                      var savedPos5 = pos;
                      if (input.substr(pos, 3) === "CSH") {
                        var result17 = "CSH";
                        pos += 3;
                      } else {
                        var result17 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"CSH\"");
                        }
                      }
                      var result18 = result17 !== null
                        ? (function() { return  8; })()
                        : null;
                      if (result18 !== null) {
                        var result16 = result18;
                      } else {
                        var result16 = null;
                        pos = savedPos5;
                      }
                      if (result16 !== null) {
                        var result0 = result16;
                      } else {
                        var savedPos4 = pos;
                        if (input.substr(pos, 3) === "KSL") {
                          var result14 = "KSL";
                          pos += 3;
                        } else {
                          var result14 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"KSL\"");
                          }
                        }
                        var result15 = result14 !== null
                          ? (function() { return  9; })()
                          : null;
                        if (result15 !== null) {
                          var result13 = result15;
                        } else {
                          var result13 = null;
                          pos = savedPos4;
                        }
                        if (result13 !== null) {
                          var result0 = result13;
                        } else {
                          var savedPos3 = pos;
                          if (input.substr(pos, 3) === "TVT") {
                            var result11 = "TVT";
                            pos += 3;
                          } else {
                            var result11 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"TVT\"");
                            }
                          }
                          var result12 = result11 !== null
                            ? (function() { return 10; })()
                            : null;
                          if (result12 !== null) {
                            var result10 = result12;
                          } else {
                            var result10 = null;
                            pos = savedPos3;
                          }
                          if (result10 !== null) {
                            var result0 = result10;
                          } else {
                            var savedPos2 = pos;
                            if (input.substr(pos, 3) === "SHV") {
                              var result8 = "SHV";
                              pos += 3;
                            } else {
                              var result8 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"SHV\"");
                              }
                            }
                            var result9 = result8 !== null
                              ? (function() { return 11; })()
                              : null;
                            if (result9 !== null) {
                              var result7 = result9;
                            } else {
                              var result7 = null;
                              pos = savedPos2;
                            }
                            if (result7 !== null) {
                              var result0 = result7;
                            } else {
                              var savedPos1 = pos;
                              if (input.substr(pos, 3) === "ADR") {
                                var result5 = "ADR";
                                pos += 3;
                              } else {
                                var result5 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"ADR\"");
                                }
                              }
                              var result6 = result5 !== null
                                ? (function() { return 12; })()
                                : null;
                              if (result6 !== null) {
                                var result4 = result6;
                              } else {
                                var result4 = null;
                                pos = savedPos1;
                              }
                              if (result4 !== null) {
                                var result0 = result4;
                              } else {
                                var savedPos0 = pos;
                                if (input.substr(pos, 3) === "ADS") {
                                  var result2 = "ADS";
                                  pos += 3;
                                } else {
                                  var result2 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"ADS\"");
                                  }
                                }
                                var result3 = result2 !== null
                                  ? (function() { return 13; })()
                                  : null;
                                if (result3 !== null) {
                                  var result1 = result3;
                                } else {
                                  var result1 = null;
                                  pos = savedPos0;
                                }
                                if (result1 !== null) {
                                  var result0 = result1;
                                } else {
                                  var result0 = null;;
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function buildErrorMessage() {
        function buildExpected(failuresExpected) {
          failuresExpected.sort();
          
          var lastFailure = null;
          var failuresExpectedUnique = [];
          for (var i = 0; i < failuresExpected.length; i++) {
            if (failuresExpected[i] !== lastFailure) {
              failuresExpectedUnique.push(failuresExpected[i]);
              lastFailure = failuresExpected[i];
            }
          }
          
          switch (failuresExpectedUnique.length) {
            case 0:
              return 'end of input';
            case 1:
              return failuresExpectedUnique[0];
            default:
              return failuresExpectedUnique.slice(0, failuresExpectedUnique.length - 1).join(', ')
                + ' or '
                + failuresExpectedUnique[failuresExpectedUnique.length - 1];
          }
        }
        
        var expected = buildExpected(rightmostMatchFailuresExpected);
        var actualPos = Math.max(pos, rightmostMatchFailuresPos);
        var actual = actualPos < input.length
          ? quote(input.charAt(actualPos))
          : 'end of input';
        
        return 'Expected ' + expected + ' but ' + actual + ' found.';
      }
      
      function computeErrorPosition() {
        /*
         * The first idea was to use |String.split| to break the input up to the
         * error position along newlines and derive the line and column from
         * there. However IE's |split| implementation is so broken that it was
         * enough to prevent it.
         */
        
        var line = 1;
        var column = 1;
        var seenCR = false;
        
        for (var i = 0; i <  rightmostMatchFailuresPos; i++) {
          var ch = input.charAt(i);
          if (ch === '\n') {
            if (!seenCR) { line++; }
            column = 1;
            seenCR = false;
          } else if (ch === '\r' | ch === '\u2028' || ch === '\u2029') {
            line++;
            column = 1;
            seenCR = true;
          } else {
            column++;
            seenCR = false;
          }
        }
        
        return { line: line, column: column };
      }
      
      
      
      var result = parseFunctions[startRule]();
      
      /*
       * The parser is now in one of the following three states:
       *
       * 1. The parser successfully parsed the whole input.
       *
       *    - |result !== null|
       *    - |pos === input.length|
       *    - |rightmostMatchFailuresExpected| may or may not contain something
       *
       * 2. The parser successfully parsed only a part of the input.
       *
       *    - |result !== null|
       *    - |pos < input.length|
       *    - |rightmostMatchFailuresExpected| may or may not contain something
       *
       * 3. The parser did not successfully parse any part of the input.
       *
       *   - |result === null|
       *   - |pos === 0|
       *   - |rightmostMatchFailuresExpected| contains at least one failure
       *
       * All code following this comment (including called functions) must
       * handle these states.
       */
      if (result === null || pos !== input.length) {
        var errorPosition = computeErrorPosition();
        throw new this.SyntaxError(
          buildErrorMessage(),
          errorPosition.line,
          errorPosition.column
        );
      }
      
      return result;
    },
    
    /* Returns the parser source code. */
    toSource: function() { return this._source; }
  };
  
  /* Thrown when a parser encounters a syntax error. */
  
  result.SyntaxError = function(message, line, column) {
    this.name = 'SyntaxError';
    this.message = message;
    this.line = line;
    this.column = column;
  };
  
  result.SyntaxError.prototype = Error.prototype;
  
  return result;
});
